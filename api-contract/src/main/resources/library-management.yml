openapi: 3.0.3
info:
  title: API contract for the library manager
  version: 1.0.0
  description: |-
    This API provides endpoints for managing libraries and their operations.
    Key Capabilities:
     - Create a new library
     - Browse libraries
     - Manage books (Create, delete)
tags:
  - name: library
    description: Manage libraries
  - name: books
    description: Manage books for a library

paths:
  /libraries:
    get:
      tags:
        - library
      summary: Get list of libraries
      description: Get the full list of available libraries
      operationId: getLibraries
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - libraries
                properties:
                  libraries:
                    type: array
                    items:
                      $ref: '#/components/schemas/library'
    post:
      tags:
        - library
      summary: Add a new library
      description: Create a new library to be managed
      operationId: addLibrary
      requestBody:
        $ref: '#/components/requestBodies/library'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/library'
        '400':
          description: Bad Request
  /libraries/{libraryId}/books:
    parameters:
      - name: libraryId
        in: path
        description: Unique id of the library
        required: true
        schema:
          type: string
    get:
      tags:
        - books
      summary: Get books by library
      description: Get books by library
      operationId: getBooksByLibrary
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paginatedListOfBooks'
        '404':
          description: Not found
    post:
      tags:
        - books
      summary: Add book to library
      description: |-
        Add a book to the library.
        The books metadata will be enriched asynchronously using Google books API.
      operationId: addBookToLibrary
      requestBody:
        description: books to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bookAddRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/book'
        '404':
          description: Not found


components:
  schemas:
    bookAddRequest:
      type: object
      properties:
        displayName:
          type: string
          example: Frieren tome 1
        isbn:
          type: string
          example: 9782368526064
    book:
      description: Model for a book
      type: object
      properties:
        displayName:
          type: string
          example: Magi tome 28
        isbn:
          type: string
          example: 9782368526064
        title:
          type: string
          example: Magi
        authors:
          type: array
          description: List of author involved in the book
          items:
            format: string
          example: ["Shinobu Othaka"]
        publisher:
          type: string
          example: Kurokawa
        publishedDate:
          ## TODO manage date as actual Date structure instead of string
          type: string
          example: 2018-04-12
        description:
          type: string
          example: Magi tome 28
        googlePreviewLink:
          type: string
          format: url
          description: link to the google book page for the specific book
          example:  "http://books.google.fr/books?id=YV7otQEACAAJ&dq=isbn:9782368526064&hl=&cd=1&source=gbs_api"
    paginatedListOfBooks:
      type: object
      required:
        - books
      properties:
        books:
          type: array
          items:
            $ref: '#/components/schemas/book'
    library:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: 1
        - $ref : '#/components/schemas/baseLibrary'
    baseLibrary:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: A meaningful name for your library
          example: personal library
        address:
          $ref: '#/components/schemas/address'
        contact:
          $ref: '#/components/schemas/contact'
    contact:
      type: object
      properties:
        firstname:
          type: string
          example: Arthur
        lastname:
          type: string
          example: Pendragon
    address:
      type: object
      required:
        - addressLine1
      properties:
        addressLine1:
          type: string
          description: First line for the address
          example: 5 Boulevard du gentleman
        addressLine2:
          type: string
          description: Seconde line for the address
        addressLine3:
          type: string
          description: First line for the address
        zipCode:
          type: string
          example: 75001
  requestBodies:
    library:
      description: Library that needs to be created
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/baseLibrary'